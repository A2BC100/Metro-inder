plugins {
	id 'org.springframework.boot' version '2.6.8'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'com.revinate:guava-rate-limiter:19.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.6.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'
	implementation 'com.auth0:java-jwt:4.3.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation 'org.nd4j:nd4j-native-platform:1.0.0-M2.1' // ND4J 라이브러리
	implementation 'org.deeplearning4j:deeplearning4j-core:1.0.0-M2.1' // DL4J 라이브러리
	implementation 'org.datavec:datavec-api:1.0.0-M2.1' // DataVec 라이브러리
	implementation 'org.datavec:datavec-local:1.0.0-M2.1' // DataVec 로컬 라이브러리
	implementation group: 'org.nd4j', name: 'nd4j-cuda-11.2-platform', version: '1.0.0-M1'
	implementation 'org.bytedeco:javacpp:1.5.7'
}

tasks.named('test') {
	useJUnitPlatform()
}


bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}